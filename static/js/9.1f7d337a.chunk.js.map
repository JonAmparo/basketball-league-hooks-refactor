{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","components/Team.js","components/TeamPage.js"],"names":["_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","Team","props","React","useState","team","setTeam","id","children","useEffect","getTeam","then","fetchTeam","propTypes","PropTypes","string","isRequired","func","teamPageReducer","state","action","type","teamNames","articles","loading","error","message","Error","TeamPage","match","useReducer","dispatch","Promise","all","getTeamNames","getTeamsArticles","params","teamId","catch","useFetch","includes","to","className","name","style","margin","cursor","pathname","search","championships","map","ship","width","established","manager","coach","wins","losses","article","url","slug","title","date","toLocaleDateString"],"mappings":"+IAAe,SAASA,EAAgBC,EAAKC,EAAKC,GAYhD,OAXID,KAAOD,EACTG,OAAOC,eAAeJ,EAAKC,EAAK,CAC9BC,MAAOA,EACPG,YAAY,EACZC,cAAc,EACdC,UAAU,IAGZP,EAAIC,GAAOC,EAGNF,EAZT,mC,sHCIe,SAASQ,EAAKC,GAAQ,IAAD,EACVC,IAAMC,SAAS,MADL,mBAC3BC,EAD2B,KACrBC,EADqB,KAE1BC,EAAiBL,EAAjBK,GAAIC,EAAaN,EAAbM,SAWZ,OAJAL,IAAMM,WAAU,YALE,SAAAF,GAChBD,GAAQ,kBAAM,QACdI,YAAQH,GAAII,MAAK,SAAAN,GAAI,OAAIC,GAAQ,kBAAMD,QAIvCO,CAAUL,KACT,CAACA,IAEGC,EAASH,GAGlBJ,EAAKY,UAAY,CACfN,GAAIO,IAAUC,OAAOC,WACrBR,SAAUM,IAAUG,KAAKD,a,gZCd3B,SAASE,EAAgBC,EAAOC,GAC9B,GAAoB,YAAhBA,EAAOC,KACT,MAAO,CACLC,UAAWF,EAAOE,UAClBC,SAAUH,EAAOG,SACjBC,SAAS,EACTC,MAAO,MAEJ,GAAoB,UAAhBL,EAAOC,KAChB,O,yWAAO,CAAP,GACKF,EADL,CAEEK,SAAS,EACTC,MAAOL,EAAOM,UAGhB,MAAM,IAAIC,MAAJ,oCAsCK,SAASC,EAAS1B,GAAQ,IAC/B2B,EAAU3B,EAAV2B,MAD8B,EAlCxC,YAA8B,IAAVA,EAAS,EAATA,MAAS,EACD1B,IAAM2B,WAAWZ,EAAiB,CAC1DI,UAAW,GACXC,SAAU,GACVC,SAAS,EACTC,MAAO,OALkB,mBACpBN,EADoB,KACbY,EADa,KAyB3B,OAjBA5B,IAAMM,WAAU,WACduB,QAAQC,IAAI,CAACC,cAAgBC,YAAiBN,EAAMO,OAAOC,UACxD1B,MAAK,YAA4B,IAAD,mBAAzBW,EAAyB,KAAdC,EAAc,KAC/BQ,EAAS,CACPV,KAAM,UACNC,YACAC,gBAGHe,OAAM,gBAAGZ,EAAH,EAAGA,QAAH,OACLK,EAAS,CACPV,KAAM,QACNK,iBAGL,CAACG,EAAMO,OAAOC,SAEV,CACLf,UAAWH,EAAMG,UACjBC,SAAUJ,EAAMI,SAChBE,MAAON,EAAMM,MACbD,QAASL,EAAMK,SAQwBe,CAAS,CAACV,UAA3CP,EAH8B,EAG9BA,UAAWC,EAHmB,EAGnBA,SAAUC,EAHS,EAGTA,QACrBa,EAAWR,EAAMO,OAAjBC,OAER,OAAgB,IAAZb,IAAoD,IAA/BF,EAAUkB,SAASH,GACnC,kBAAC,IAAD,CAAUI,GAAG,MAIpB,6BACE,kBAAC,IAAD,CAAMlC,GAAI8B,IACP,SAAAhC,GAAI,OACM,OAATA,EACE,kBAAC,IAAD,MAEA,yBAAKqC,UAAU,SACb,kBAAC,IAAD,CAAUnC,GAAI8B,IACd,wBAAIK,UAAU,iBAAiBrC,EAAKsC,MACpC,wBAAIC,MAAO,CAAEC,OAAQ,IACnB,kBAAC,IAAD,CACED,MAAO,CAAEE,OAAQ,WACjBL,GAAI,CAAEM,SAAU,WAAYC,OAAO,WAAD,OAAaX,KAFjD,gBAOF,6CACA,wBAAIK,UAAU,iBACXrC,EAAK4C,cAAcC,KAAI,SAAAC,GAAI,OAC1B,wBAAIzD,IAAKyD,GAAOA,OAGpB,wBAAIT,UAAU,gBAAgBE,MAAO,CAAEQ,MAAO,SAC5C,0CACa,6BAAM/C,EAAKgD,cAExB,sCACS,6BAAMhD,EAAKiD,UAEpB,oCACO,6BAAMjD,EAAKkD,QAElB,qCAEE,6BACGlD,EAAKmD,KADR,IACenD,EAAKoD,UAIxB,wBAAIf,UAAU,UAAd,YACA,wBAAIA,UAAU,YACXnB,EAAS2B,KAAI,SAAAQ,GAAO,OACnB,wBAAIhE,IAAKgE,EAAQnD,IACf,kBAAC,IAAD,CAAMkC,GAAE,UAAKZ,EAAM8B,IAAX,qBAA2BC,IAAKF,EAAQG,SAC9C,wBAAInB,UAAU,iBAAiBgB,EAAQG,OACvC,yBAAKnB,UAAU,gBACZgB,EAAQI,KAAKC","file":"static/js/9.1f7d337a.chunk.js","sourcesContent":["export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { getTeam } from '../api';\n\nexport default function Team(props) {\n  const [team, setTeam] = React.useState(null);\n  const { id, children } = props;\n\n  const fetchTeam = id => {\n    setTeam(() => null);\n    getTeam(id).then(team => setTeam(() => team));\n  };\n\n  React.useEffect(() => {\n    fetchTeam(id);\n  }, [id]);\n\n  return children(team);\n}\n\nTeam.propTypes = {\n  id: PropTypes.string.isRequired,\n  children: PropTypes.func.isRequired\n};\n","import React from 'react';\nimport { Redirect, Link } from 'react-router-dom';\nimport { getTeamNames, getTeamsArticles } from '../api';\nimport TeamLogo from './TeamLogo';\nimport Team from './Team';\nimport Loading from './Loading';\nimport slug from 'slug';\n\nfunction teamPageReducer(state, action) {\n  if (action.type === 'success') {\n    return {\n      teamNames: action.teamNames,\n      articles: action.articles,\n      loading: false,\n      error: null\n    };\n  } else if (action.type === 'error') {\n    return {\n      ...state,\n      loading: false,\n      error: action.message\n    };\n  } else {\n    throw new Error(`That action type isn't supported`);\n  }\n}\n\nfunction useFetch({ match }) {\n  const [state, dispatch] = React.useReducer(teamPageReducer, {\n    teamNames: [],\n    articles: [],\n    loading: true,\n    error: null\n  });\n\n  React.useEffect(() => {\n    Promise.all([getTeamNames(), getTeamsArticles(match.params.teamId)])\n      .then(([teamNames, articles]) => {\n        dispatch({\n          type: 'success',\n          teamNames,\n          articles\n        });\n      })\n      .catch(({ message }) =>\n        dispatch({\n          type: 'error',\n          message\n        })\n      );\n  }, [match.params.teamId]);\n\n  return {\n    teamNames: state.teamNames,\n    articles: state.articles,\n    error: state.error,\n    loading: state.loading\n  };\n}\n// export default function TeamPage({ match }) {\n\nexport default function TeamPage(props) {\n  const { match } = props;\n  // console.log('match:', match)\n  const { teamNames, articles, loading } = useFetch({match});\n  const { teamId } = match.params;\n\n  if (loading === false && teamNames.includes(teamId) === false) {\n    return <Redirect to='/' />;\n  }\n\n  return (\n    <div>\n      <Team id={teamId}>\n        {team =>\n          team === null ? (\n            <Loading />\n          ) : (\n            <div className='panel'>\n              <TeamLogo id={teamId} />\n              <h1 className='medium-header'>{team.name}</h1>\n              <h4 style={{ margin: 5 }}>\n                <Link\n                  style={{ cursor: 'pointer' }}\n                  to={{ pathname: '/players', search: `?teamId=${teamId}` }}\n                >\n                  View Roster\n                </Link>\n              </h4>\n              <h4>Championships</h4>\n              <ul className='championships'>\n                {team.championships.map(ship => (\n                  <li key={ship}>{ship}</li>\n                ))}\n              </ul>\n              <ul className='info-list row' style={{ width: '100%' }}>\n                <li>\n                  Established<div>{team.established}</div>\n                </li>\n                <li>\n                  Manager<div>{team.manager}</div>\n                </li>\n                <li>\n                  Coach<div>{team.coach}</div>\n                </li>\n                <li>\n                  Record\n                  <div>\n                    {team.wins}-{team.losses}\n                  </div>\n                </li>\n              </ul>\n              <h2 className='header'>Articles</h2>\n              <ul className='articles'>\n                {articles.map(article => (\n                  <li key={article.id}>\n                    <Link to={`${match.url}/articles/${slug(article.title)}`}>\n                      <h4 className='article-title'>{article.title}</h4>\n                      <div className='article-date'>\n                        {article.date.toLocaleDateString()}\n                      </div>\n                    </Link>\n                  </li>\n                ))}\n              </ul>\n            </div>\n          )\n        }\n      </Team>\n    </div>\n  );\n}\n"],"sourceRoot":""}